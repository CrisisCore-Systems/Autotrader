name: security-scan

on:
  push:
    branches: [main]
  pull_request:
  schedule:
    - cron: '0 6 * * *'

# Cancel in-progress scans for same branch/PR (keep scheduled runs)
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name != 'schedule' && github.ref || github.run_id }}
  cancel-in-progress: ${{ github.event_name != 'schedule' }}

permissions:
  contents: read
  security-events: write
  pull-requests: write

jobs:
  # === Static Analysis ===
  semgrep:
    name: Semgrep Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 # v4.1.1
      
      - name: Run Semgrep
        uses: returntocorp/semgrep-action@713efdd345f3035192eaa63f56867b88e63e4e5d # v1.76.0
        with:
          config: >-
            p/security-audit
            p/secrets
            p/owasp-top-ten
            p/python
            ci/semgrep.yml
        env:
          SEMGREP_APP_TOKEN: ${{ secrets.SEMGREP_APP_TOKEN }}
      
      - name: Upload Semgrep SARIF
        if: always()
        uses: github/codeql-action/upload-sarif@16140ae1a102900babc80a33c44059580f687047  # v3.13.1
        with:
          sarif_file: semgrep.sarif
          category: semgrep

  # === Python Security ===
  bandit:
    name: Bandit Python Security
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 # v4.1.1
      
      - uses: actions/setup-python@7f4fc3e22c37d6ff65e88745f38bd3157c663f7c # v4.9.1
        with:
          python-version: '3.11'
      
      - name: Install Bandit
        run: pip install bandit[sarif]
      
      - name: Run Bandit
        run: bandit -r src pipeline -f sarif -o bandit-results.sarif --severity-level medium || true
      
      - name: Upload Bandit SARIF
        if: always()
        uses: github/codeql-action/upload-sarif@16140ae1a102900babc80a33c44059580f687047  # v3.13.1
        with:
          sarif_file: bandit-results.sarif
          category: bandit

  # === Dependency Scanning ===
  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 # v4.1.1
      
      - name: Dependency Review
        uses: actions/dependency-review-action@40c09b7dc99638e5ddb0bfd91c1673effc064d8a # v4.0.0
        with:
          fail-on-severity: high
          deny-licenses: GPL-2.0, AGPL-3.0
          comment-summary-in-pr: always

  pip-audit:
    name: Python Dependency Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 # v4.1.1
      
      - uses: actions/setup-python@7f4fc3e22c37d6ff65e88745f38bd3157c663f7c # v4.9.1
        with:
          python-version: '3.11'
      
      - name: Install pip-audit
        run: pip install pip-audit
      
      - name: Audit dependencies
        run: pip-audit -r requirements.txt --desc --fix-dry-run --format json --output pip-audit-results.json || true
      
      - name: Upload audit results
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: pip-audit-results
          path: pip-audit-results.json
          retention-days: 30

  # === Container Scanning ===
  trivy:
    name: Trivy Security Scanner
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    steps:
      - uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 # v4.1.1
      
      - name: Run Trivy filesystem scan
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8 # v0.33.1
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM'
          scanners: 'vuln,secret,config,license'
      
      - name: Upload Trivy SARIF
        if: always()
        uses: github/codeql-action/upload-sarif@16140ae1a102900babc80a33c44059580f687047 # v3.24.6
        with:
          sarif_file: trivy-results.sarif
          category: trivy-filesystem
      
      - name: Run Trivy config scan
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8 # v0.33.1
        with:
          scan-type: 'config'
          scan-ref: '.'
          format: 'table'
          severity: 'CRITICAL,HIGH'
          exit-code: 1  # Fail on critical/high

  # === Secrets Scanning ===
  gitleaks:
    name: Gitleaks Secret Scanner
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 # v4.1.1
        with:
          fetch-depth: 0  # Full history for secret detection
      
      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@ff98106e4c7b2bc287b24eaf42907196329070c7
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  trufflehog:
    name: TruffleHog Secret Scanner
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 # v4.1.1
        with:
          fetch-depth: 0
      
      - name: Run TruffleHog
        uses: trufflesecurity/trufflehog@24c73b0cb64f4a91de562182cced0f0a8c34a03c
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --only-verified

  # === SBOM Generation ===
  sbom:
    name: Generate SBOM
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 # v4.1.1
      
      - name: Generate Python SBOM
        uses: anchore/sbom-action@aa0e114b2e19480f157109b9922bda359bd98b90 # v0.15.7
        with:
          path: .
          format: spdx-json
          artifact-name: python-sbom.spdx.json
          output-file: sbom-python.spdx.json
      
      - name: Upload SBOM artifact
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: sbom-reports
          path: sbom-python.spdx.json
          retention-days: 90
      
      - name: Scan SBOM with Grype
        id: grype-scan
        uses: anchore/scan-action@a5605eb0943e46279cb4fbd9d44297355d3520ab # v7.0.2
        with:
          sbom: sbom-python.spdx.json
          fail-build: true
          severity-cutoff: high
          output-format: sarif
      
      - name: Upload Grype SARIF
        if: always()
        uses: github/codeql-action/upload-sarif@16140ae1a102900babc80a33c44059580f687047 # v3.24.6
        with:
          sarif_file: ${{ steps.grype-scan.outputs.sarif }}
          category: grype-sbom

  # === License Compliance ===
  license-check:
    name: License Compliance Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 # v4.1.1
      
      - uses: actions/setup-python@7f4fc3e22c37d6ff65e88745f38bd3157c663f7c # v4.9.1
        with:
          python-version: '3.11'
      
      - name: Install pip-licenses
        run: pip install pip-licenses
      
      - name: Install dependencies
        run: pip install -r requirements.txt
      
      - name: Check licenses
        run: |
          pip-licenses \
            --format=json \
            --output-file=licenses.json \
            --fail-on="GPL-2.0;GPL-3.0;AGPL-3.0" \
            --allow-only="MIT;Apache-2.0;BSD-3-Clause;BSD-2-Clause;ISC;Python-2.0;MPL-2.0"
      
      - name: Upload license report
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: license-report
          path: licenses.json
          retention-days: 90

  # === Configuration Validation ===
  alert-config-validation:
    name: Alert Rules Validation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 # v4.1.1
      
      - uses: actions/setup-python@7f4fc3e22c37d6ff65e88745f38bd3157c663f7c # v4.9.1
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: pip install pyyaml jsonschema
      
      - name: Validate alert rules configuration
        run: python scripts/validate_alert_rules.py --config configs/alert_rules.yaml
  
  prompt-contract-validation:
    name: Prompt Contract Validation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493 # v4.1.1
      
      - uses: actions/setup-python@7f4fc3e22c37d6ff65e88745f38bd3157c663f7c # v4.9.1
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: pip install jsonschema pyyaml
      
      - name: Validate prompt contracts
        run: python scripts/validate_prompt_contracts.py
      
      - name: Check for schema drift
        run: |
          if python scripts/validate_prompt_contracts.py | grep -i "extra keys"; then
            echo "::warning::Schema drift detected - review prompt outputs"
          fi
  
  security-summary:
    name: Security Scan Summary
    runs-on: ubuntu-latest
    needs: [semgrep, bandit, trivy, gitleaks, trufflehog, pip-audit, license-check, alert-config-validation, prompt-contract-validation]
    if: always()
    steps:
      - name: Generate Security Summary
        run: |
          echo "## ðŸ”’ Security Scan Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Scanner | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|---------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Semgrep | ${{ needs.semgrep.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Bandit | ${{ needs.bandit.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Trivy | ${{ needs.trivy.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Gitleaks | ${{ needs.gitleaks.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| TruffleHog | ${{ needs.trufflehog.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| pip-audit | ${{ needs.pip-audit.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| License Check | ${{ needs.license-check.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Alert Config | ${{ needs.alert-config-validation.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Prompt Contracts | ${{ needs.prompt-contract-validation.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "ðŸ“š [Security Posture Documentation](../SECURITY_POSTURE_COMPLETE.md)" >> $GITHUB_STEP_SUMMARY
