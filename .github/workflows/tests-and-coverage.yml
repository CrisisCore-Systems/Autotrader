name: tests-and-coverage

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov
      
      - name: Run tests with coverage
        run: pytest --cov=src --cov-report=term --cov-report=xml --cov-fail-under=80
        
      - name: Coverage threshold check
        run: |
          coverage report --fail-under=80 --show-missing
      
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install linting tools
        run: |
          pip install ruff mypy pylint
          pip install -r requirements.txt
      
      - name: Run ruff linting
        run: ruff check src/ --output-format=github
      
      - name: Run mypy type checking
        run: mypy src/ --strict --ignore-missing-imports
      
      - name: Run pylint
        run: pylint src/ --fail-under=8.0 --output-format=colorized

  quality-gate:
    runs-on: ubuntu-latest
    needs: [test, lint]
    if: always()
    steps:
      - name: Check quality gate
        run: |
          if [ "${{ needs.test.result }}" != "success" ] || [ "${{ needs.lint.result }}" != "success" ]; then
            echo "❌ Quality gate failed"
            echo "Test result: ${{ needs.test.result }}"
            echo "Lint result: ${{ needs.lint.result }}"
            exit 1
          else
            echo "✅ Quality gate passed"
          fi

