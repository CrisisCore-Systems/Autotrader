name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  lint:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff mypy
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      
      - name: Run Ruff
        run: |
          ruff check src/ --output-format=github
        continue-on-error: true
      
      - name: Run MyPy
        run: |
          mypy src/ --ignore-missing-imports --no-strict-optional
        continue-on-error: true

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.13"]
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov pytest-asyncio
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-py313.txt ] && [ "${{ matrix.python-version }}" == "3.13" ]; then 
            pip install -r requirements-py313.txt
          fi
      
      - name: Run pytest
        run: |
          if [ -d tests ]; then 
            pytest tests/ -v --cov=src --cov-report=xml --cov-report=term
          else 
            echo "No tests directory found"
          fi
      
      - name: Upload coverage
        uses: codecov/codecov-action@v4
        if: matrix.python-version == '3.13'
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
      
      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  build:
    name: Build and Validate
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build wheel
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      
      - name: Validate project structure
        run: |
          python -c "import src; print('✓ src package is importable')"
          python -c "from src.core.pipeline import HiddenGemScanner; print('✓ Core modules OK')"
          python -c "from src.api.dashboard_api import app; print('✓ API module OK')"
      
      - name: Check for notebooks
        run: |
          if [ -d notebooks ]; then
            pip install nbformat jupyter
            python -c "import nbformat; [nbformat.read(f, as_version=4) for f in __import__('pathlib').Path('notebooks').glob('*.ipynb')]"
            echo "✓ All notebooks are valid"
          fi
